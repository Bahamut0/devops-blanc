name: Devops-Blanc

on:

  push:
    branches:
      - feature-*
  pull_request:
    branches: [ feature-*, features ]
    types: [opened, closed]
              

permissions:
  contents: write
  pull-requests: write


env:
  IS_FEATURES_MERGED: false


jobs:

  #   ##################################################################
  #   # Job 1 Créer une pull request pour la branche principale features #
  #   ##################################################################

  createPullRequest:
    runs-on: ubuntu-latest

    if: (contains(github.ref, 'feature-') && github.event_name == 'push' && contains(toJSON(github.event.head_commit.message), 'Merge pull request') == false)
 
    steps:
      - uses: actions/checkout@v4
      - name: Create report file
        run: date +%s > report.txt
        # run: echo hello > report.txt

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          commit-message: '${{github.sha}}'
          committer: Bahamut0 <Bahamut0@users.noreply.github.com>
          body: |
            New report
            - Contains hello
            - Auto-generated by [create-pull-request][1]

            [1]: https://github.com/peter-evans/create-pull-request
          title: 'Changement sur la branche features ${{github.run_number}}'
          labels: feature, automated pr
          assignees: Bahamut0
          reviewers: Bahamut0
          branch: github.ref
          base: features


    ##############################################################
    # JOB 2 - Build l'env python et effectuer les tests unitaires #
    ##############################################################

  build_and_test:

    if: github.event.pull_request.merged


    runs-on: ubuntu-latest

    steps:

    ################################
    # Checkout #
    ################################
    - name: Checkout - Récuparation du projet
      uses: actions/checkout@v4

    - name: Récupération de la branche courante (base)
      run: echo ${{ github.ref }} 

    ################################
    # Python #
    ################################

    - name: Installation de Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'


    ################################
    # Tests   #
    ################################

    - name: Rendre les fichiers sh exécutable
      run: chmod u+x scripts/*

    - name: Génération de la doc main.md
      run: scripts/mkdoc.sh

    - name: Tests unitaires
      run: scripts/mktest.sh


  # #   ###########################################################
  # #   # Job 3 Merger la branche de feature dans la branche main #
  # #   ###########################################################

  merge_on_stage:

    needs: build_and_test
    runs-on: ubuntu-latest
    
    steps:

    # recupération du repository
    - name: git checkout
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

    - name: Création de la pull request
      id: open-pr
      uses: peter-evans/create-pull-request@v7
      with:
        token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        commit-message: 'Envoi vers stage - Commit numéro: ${{github.sha}}'
        title: 'Envoi vers stage - Commit numéro: ${{github.sha}}'
        body: >
          This PR is auto-generated by 
          [create-pull-request](https://github.com/peter-evans/create-pull-request).
        labels: feature, automated pr
        branch: stage
        delete-branch: false

    - name: Activer la merge automatique
      if: steps.open-pr.outputs.pr_number != ''
      uses: peter-evans/enable-pull-request-automerge@v3
      with:
        token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        pull-request-number: ${{ steps.open-pr.outputs.pr_number }}
        merge-method: squash


  #   ###########################################################
  #   # Job 4 Merger la branche de stage dans la branche main #
  #   ###########################################################



  merge_on_main:
    needs: merge_on_stage
    runs-on: ubuntu-latest
    steps:

    # recupération du repository
    - name: git checkout
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

    - name: Création de la pull request
      id: open-pr
      uses: peter-evans/create-pull-request@v7
      with:
        token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        commit-message: 'Envoi vers main - Commit numéro: ${{github.shar}}'
        title: 'Envoi vers main - Commit numéro: ${{github.sha}}'
        body: >
          This PR is auto-generated by 
          [create-pull-request](https://github.com/peter-evans/create-pull-request).
        labels: feature, automated pr
        branch: main

    - name: Activer la merge automatique
      if: steps.open-pr.outputs.pr_number != ''
      uses: peter-evans/enable-pull-request-automerge@v3
      with:
        token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        pull-request-number: ${{ steps.open-pr.outputs.pr_number }}
        merge-method: squash

  
  release:
    needs: merge_on_main
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Changement de version et tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          commit_sha: ""
          
      - name: Création d'une release GitHub
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}


      
  

      